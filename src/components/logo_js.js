/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\\hut.glb
*/
import { useRef } from 'react';
import {  useFrame } from '@react-three/fiber';
import { useGLTF  } from '@react-three/drei';


export default function HutModel(props) {
    const { nodes, materials } = useGLTF("./js.glb");

    const logo_ref = useRef();
    const mesh_ref = useRef();

    useFrame(({ clock }) => {
        const a = clock.getElapsedTime();
        mesh_ref.current.rotation.y = a;
    })

    return (
        <group {...props} ref={logo_ref} dispose={null} rotation={[0, 0, 0]} scale={50} >
            <group ref={mesh_ref} position={[.02, 0, .01]}>
                <mesh geometry={nodes.Cube.geometry} material={materials['Material.001']} position={[-0.01, 0, 0.00]} rotation={[-0.36, 1.53, 0.35]} scale={[0.84, 1, 1]} />
                <mesh geometry={nodes.Text.geometry} material={materials['Material.002']} position={[0, -0.05, -.03]} rotation={[1.57, 0.01, -3.11]} scale={0.1} />
            </group>
        </group>
    );
}
